---
import type { HTMLAttributes } from "astro/types";
import { cva, type VariantProps } from "class-variance-authority";

import { Icon } from "astro-icon/components";

const button = cva(
  "border text-center leading-none  border-light border-opacity-25 bg-dark transition duration-75 ease-out hover:border-brand hover:border-opacity-50 hover:bg-brand hover:bg-opacity-15 hover:text-brand-2 focus:outline-brand relative",
  {
    variants: {
      intent: {
        primary: [],
        secondary: [],
        cart: ["w-full", "flex", "items-center", "justify-center", "mt-8"],
      },
      size: {
        small: ["px-2", "pb-1", "pt-[6px]", "text-xs"],
        medium: ["~px-2/4", "~text-xs/sm", "py-1", "rounded-md"],
      },
      icon: {
        cart: ["flex", "items-center"],
      },
      disabled: {
        false: null,
        true: ["opacity-50", "cursor-not-allowed"],
      },
    },
    compoundVariants: [
      {
        size: "small",
        icon: "cart",
        class: "gap-1",
      },
      {
        size: "medium",
        icon: "cart",
        class: "~gap-1/2",
      },
    ],
  },
);

export interface Props
  extends Omit<HTMLAttributes<"button">, "disabled">,
    VariantProps<typeof button> {
  intent?: "primary" | "secondary" | "cart";
  disabled?: boolean;
  size?: "small" | "medium";
  id?: string;
  href?: string;
  type?: "button" | "submit" | "reset";
  icon?: "cart";
  data?: string;
}

const {
  class: className,
  intent = "primary",
  disabled = false,
  size = "medium",
  id,
  href,
  type = "button",
  icon,
} = Astro.props;
---

{
  href ? (
    <a href={href} class={button({ intent, size, className, icon })} id={id}>
      {icon && <Icon name={icon} class="~size-3/4" />}
      <slot />
    </a>
  ) : (
    <button
      id={id}
      class={button({ intent, size, className, icon })}
      disabled={disabled}
      type={type}
    >
      {icon && <Icon name={icon} class="~size-3/4" />}
      <slot />
    </button>
  )
}
