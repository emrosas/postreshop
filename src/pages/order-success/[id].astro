---
export const prerender = false;

import Layout from "@/layouts/Layout.astro";
import Section from "@/components/Section.astro";
import { Image } from "astro:assets";

import receiptIcon from "@/assets/receipt-icon.png";

import { db, eq, Orders, Pasteles, inArray } from "astro:db";
import type { OrderProduct } from "db/config";
import { Sucursales } from "astro:db";
import { getPresentacionPrice } from "@lib/pricesConfig";

const { id } = Astro.params;
const numberId = Number(id);

const ordenesConId = await db
  .select()
  .from(Orders)
  .where(eq(Orders.id, numberId))
  .limit(1);
const orden = ordenesConId[0];
const productosOrden = JSON.parse(orden.productos as string) as OrderProduct[];

const pasteles = await db
  .select()
  .from(Pasteles)
  .where(
    inArray(
      Pasteles.id,
      productosOrden.map((p) => p.id),
    ),
  );

type OrderDetailsProduct = OrderProduct & {
  nombre: string;
  precio: number;
  imagen: string;
  importe: number;
};

const productos = productosOrden.map((p) => {
  // Use TypeScript type guard to validate and get price safely
  const importe = getPresentacionPrice(p.presentacion);

  const pastel = pasteles.find((pastel) => pastel.id === p.id);
  return {
    ...p,
    nombre: pastel?.nombre || "",
    precio: pastel?.precio || 0,
    imagen: pastel?.imagen || "",
    importe: importe,
  } as OrderDetailsProduct;
});
const sucursal = await db
  .select()
  .from(Sucursales)
  .where(eq(Sucursales.id, orden.sucursal));

const total = new Intl.NumberFormat("es-MX", {
  style: "currency",
  currency: "MXN",
}).format(
  productos.reduce((acc, item) => acc + item.importe * item.cantidad, 0),
);
---

<Layout
  title="Orden Realizada"
  description="Gracias por tu pedido. Por favor revisa los datos de tu pedido."
>
  <Section>
    <div class="py-16 text-base">
      <h1 class="mx-auto mb-4 text-center">
        Comprobante de compra. Toma una captura de pantalla!
      </h1>
      <div class="mx-auto max-w-xl space-y-6 rounded-lg bg-light p-6 text-dark">
        <!-- Receipt Header -->
        <div class="flex items-center justify-between">
          <Image src={receiptIcon} alt="Postre Shop Icon" class="size-16" />
          <div class="text-right">
            <h3 class="text-medium">
              {new Date(orden.creado).toLocaleDateString()}
            </h3>
            <p class="text-xs opacity-60"><span>ID:</span> {orden.id}</p>
          </div>
        </div>
        <!-- Receipt Body -->
        <h2 class="text-2xl font-medium capitalize tracking-tight">
          {orden.nombre}
        </h2>
        <div>
          <ul class="space-y-2">
            <li><b class="font-medium">Tel√©fono:</b> {orden.tel}</li>
            <li><b class="font-medium">Estado:</b> {orden.estado}</li>
            <li>
              <b class="font-medium">Fecha de Entrega:</b>
              {new Date(orden.fecha).toLocaleDateString()}
            </li>
            <li>
              <b class="font-medium">Hora de Entrega:</b>
              {orden.fecha.split("T")[1].split(":", 1)[0] + ":00"}
            </li>
            <li>
              <b class="font-medium">Sucursal de Entrega:</b>
              {sucursal[0].name}
            </li>
          </ul>
        </div>
        <ul class="border-dark-/60 space-y-2 border-y py-2">
          {
            productos.map((p) => (
              <li class="flex items-center justify-between gap-2 border-b border-dashed border-dark/30 pb-2 last:border-0 last:pb-0">
                <div class="flex items-center gap-2">
                  <Image
                    src={p.imagen}
                    width={64}
                    height={64}
                    alt={p.nombre}
                    class="rounded-sm"
                  />
                  <div class="flex flex-col">
                    <h3 class="font-medium">{p.nombre}</h3>
                    <p class="text-xs capitalize opacity-60">
                      {p.presentacion}
                    </p>
                  </div>
                </div>
                <div class="flex items-end gap-1 font-medium">
                  <span class="text-xs font-light leading-none">
                    {p.cantidad}x
                  </span>
                  <strong class="leading-none">${p.importe}</strong>
                </div>
              </li>
            ))
          }
        </ul>
        <div class="flex justify-between text-2xl font-medium">
          <h4 class="tracking-tight">Total</h4>
          <strong class="font-sans">{total}</strong>
        </div>
      </div>
    </div>
  </Section>
</Layout>

<script>
  import { clearCart } from "@/store";
  clearCart();
</script>
